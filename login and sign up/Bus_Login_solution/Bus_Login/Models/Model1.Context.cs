//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bus_Login.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Bus_ProjectEntities : DbContext
    {
        public Bus_ProjectEntities()
            : base("name=Bus_ProjectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Registered_User> Registered_User { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Bus_Details> Bus_Details { get; set; }
        public virtual DbSet<Coach_bus> Coach_bus { get; set; }
        public virtual DbSet<Guest> Guests { get; set; }
        public virtual DbSet<payment> payments { get; set; }
        public virtual DbSet<Seat> Seats { get; set; }
        public virtual DbSet<Travel> Travels { get; set; }
    
        public virtual ObjectResult<string> sp_LoginCheck(string un, string pass)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_LoginCheck", unParameter, passParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_BookedSeats(Nullable<int> bus_id, string status)
        {
            var bus_idParameter = bus_id.HasValue ?
                new ObjectParameter("bus_id", bus_id) :
                new ObjectParameter("bus_id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_BookedSeats", bus_idParameter, statusParameter);
        }
    }
}
